@model PNE_core.Models.Planeau
@{
    var point = Model.Emplacement;
}

<div class="main-content">
    <div class="page-header text-center mb-4">
        <h1 class="display-4"><strong>Gestion des plans d'eau</strong></h1>
        <p class="lead">Gérez vos plans d'eau et leurs stations de lavage</p>
    </div>

    <div class="card mb-4">
        <div class="card-body p-0">
            <div id="map"></div>
        </div>
    </div>

    <div class="stations-section">
        <div class="d-flex justify-content-between align-items-center mb-3">
            <h3>Stations de lavage</h3>
            <a asp-controller="StationLavages" asp-action="Create" asp-route-idPlanEau="@Model.IdPlanEau" class="btn btn-submit">
                <i class="fas fa-plus"></i> Nouvelle station
            </a>
        </div>

        <div class="row station-container">
            @foreach (var station in ViewBag.Stations ?? new List<PNE_core.Models.StationLavage>())
            {
                <div class="col-md-6 col-lg-4 mb-3">
                    <div class="station-card h-100">
                        <h5 class="station-title">@station.Nom</h5>
                        <div class="station-features">
                            @if (station.PeutDecontaminer == true)
                            {
                                <span class="feature-badge">Décontamination</span>
                            }
                            @if (station.HautePression == true)
                            {
                                <span class="feature-badge">Haute pression</span>
                            }
                            @if (station.BassePressionetAttaches == true)
                            {
                                <span class="feature-badge">Basse pression</span>
                            }
                            @if (station.EauChaude == true)
                            {
                                <span class="feature-badge">Eau chaude</span>
                            }
                        </div>
                        <div class="mt-2">
                            <small class="text-muted">Personnel: @station.StationPersonnelStatus</small>
                        </div>
                        <div class="mt-3 d-flex justify-content-start gap-2">
                            <a asp-controller="StationLavages" asp-action="Edit" asp-route-id="@station.Id" class="btn btn-sm btn-edit">Modifier</a>
                            <a asp-controller="StationLavages" asp-action="Details" asp-route-id="@station.Id" class="btn btn-sm btn-detail">Détails</a>
                        </div>
                    </div>
                </div>
            }
        </div>
    </div>

    <!-- Marge supplémentaire en bas de page -->
    <div class="footer-spacer"></div>
</div>

@section Scripts {
    <link rel="stylesheet" href="https://unpkg.com/leaflet@1.9.4/dist/leaflet.css" />
    <script src="https://unpkg.com/leaflet@1.9.4/dist/leaflet.js"></script>
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            var defaultLat = 45.4;
            var defaultLng = -71.9;

        @{
            var latitude = Model.Emplacement != null ? Model.Emplacement.Y : 45.4;
            var longitude = Model.Emplacement != null ? Model.Emplacement.X : -71.9;
        }

            var lat = @latitude;
            var lng = @longitude;

            var map = L.map('map').setView([lat, lng], 13);
            L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
                attribution: '© OpenStreetMap contributors'
            }).addTo(map);

            var currentMarker = L.marker([lat, lng]).addTo(map);
            currentMarker.bindPopup('@Model.Nom');

        @foreach (var station in ViewBag.Stations ?? new List<PNE_core.Models.StationLavage>())
        {
            if (station.Position != null)
            {
                <text>
                                var stationMarker = L.marker([@station.Position.Y, @station.Position.X]).addTo(map);
                                stationMarker.bindPopup('<strong>@Html.Raw(station.Nom)</strong><br>@(station.PeutDecontaminer == true ? "Décontamination<br>" : "")@(station.HautePression == true ? "Haute pression<br>" : "")@(station.BassePressionetAttaches == true ? "Basse pression<br>" : "")@(station.EauChaude == true ? "Eau chaude" : "")');
                </text>
            }
        }

            var markers = [];
            map.eachLayer(function(layer) {
                if (layer instanceof L.Marker) {
                    markers.push(layer.getLatLng());
                }
            });
            if (markers.length > 0) {
                var bounds = L.latLngBounds(markers);
                map.fitBounds(bounds, { padding: [50, 50] });
            }

            // Fix map size after loading to prevent rendering issues
            setTimeout(function() {
                map.invalidateSize();
            }, 100);
        });
    </script>
}

<style>
    html, body {
        height: 100%;
        margin: 0;
        padding: 0;
        overflow-x: hidden;
    }

    .main-content {
        padding: 1.5rem;
        max-width: 1200px;
        margin: 0 auto;
    }

    /* Map styling */
    #map {
        height: 400px;
        width: 100%;
        z-index: 1;
    }

    /* Stations section */
    .stations-section {
        margin-top: 2rem;
        padding: 1.5rem;
        background-color: #E1E2E4;
        border-radius: 0.5rem;
        box-shadow: 0 2px 4px rgba(0,0,0,0.05);
    }

    /* Station cards */
    .station-container {
        margin-right: 0;
        margin-left: 0;
    }

    .station-card {
        padding: 1.25rem;
        border: 1px solid #dee2e6;
        border-radius: 0.5rem;
        background-color: white;
        box-shadow: 0 1px 3px rgba(0,0,0,0.05);
        transition: transform 0.2s, box-shadow 0.2s;
        height: 100%;
        display: flex;
        flex-direction: column;
    }

        .station-card:hover {
            transform: translateY(-2px);
            box-shadow: 0 4px 6px rgba(0,0,0,0.1);
        }

    .station-title {
        margin-bottom: 1rem;
        font-weight: 600;
        color: #212529;
    }

    /* Feature badges */
    .station-features {
        display: flex;
        gap: 0.5rem;
        flex-wrap: wrap;
        margin-bottom: 0.5rem;
    }

    .feature-badge {
        padding: 0.25rem 0.75rem;
        border-radius: 1rem;
        font-size: 0.75rem;
        background-color: #e9ecef;
        color: #495057;
        font-weight: 500;
    }

    /* Custom button styles */
    .btn-detail {
        border-color: #6c757d;
        color: #6c757d;
    }

        .btn-detail:hover {
            background-color: #6c757d;
            color: white;
        }

    .btn-edit {
        border-color: #007bff;
        color: #007bff;
    }

        .btn-edit:hover {
            background-color: #007bff;
            color: white;
        }

    .btn-submit {
        background-color: #198754;
        color: white;
        border: none;
        padding: 0.375rem 0.75rem;
        border-radius: 0.25rem;
        font-weight: 500;
    }

        .btn-submit:hover {
            background-color: #145c32;
            color: white;
        }

    /* Fix for scrolling issues */
    .row {
        margin-right: 0;
        margin-left: 0;
    }

    /* Marge supplémentaire en bas de page */
    .footer-spacer {
        height: 60px;
        width: 100%;
        clear: both;
    }

</style>