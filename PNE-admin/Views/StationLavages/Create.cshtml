@model PNE_core.Models.StationLavage

@{
    ViewData["Title"] = "Nouvelle station de lavage";
    Layout = "~/Views/Shared/_Layout.cshtml";
    var planEau = ViewBag.PlanEau as PNE_core.Models.Planeau;
}

<div class="user-card">
    <div class="user-card-header">
        <h2>Nouvelle station de lavage</h2>
        <h4>Pour le plan d'eau : @planEau.Nom</h4>
    </div>
    <div class="user-card-body">
        <form asp-action="Create" id="createForm" onsubmit="return validateForm()">
            <input type="hidden" name="idPlanEau" value="@planEau.IdPlanEau" />
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>

            <div class="form-group">
                <label asp-for="Nom" class="form-label">Nom de la station</label>
                <input asp-for="Nom" class="form-control" placeholder="Entrez le nom de la station" required />
                <span asp-validation-for="Nom" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label class="form-label">Caractéristiques</label>
                <div class="form-check">
                    <input asp-for="PeutDecontaminer" class="form-check-input" type="checkbox" />
                    <label class="form-check-label" asp-for="PeutDecontaminer">Peut décontaminer</label>
                </div>
                <div class="form-check">
                    <input asp-for="HautePression" class="form-check-input" type="checkbox" />
                    <label class="form-check-label" asp-for="HautePression">Haute pression</label>
                </div>
                <div class="form-check">
                    <input asp-for="BassePressionetAttaches" class="form-check-input" type="checkbox" />
                    <label class="form-check-label" asp-for="BassePressionetAttaches">Basse pression et attaches</label>
                </div>
                <div class="form-check">
                    <input asp-for="EauChaude" class="form-check-input" type="checkbox" />
                    <label class="form-check-label" asp-for="EauChaude">Eau chaude</label>
                </div>
            </div>

            <div class="form-group">
                <label class="form-label">Position</label>
                <div id="map" style="height: 300px;"></div>
                <input type="hidden" asp-for="PositionString" id="positionString" required />
                <div class="text-muted">Cliquez sur la carte pour définir la position</div>
                <div id="positionError" class="text-danger" style="display: none;">Veuillez sélectionner une position</div>
            </div>

            <div class="form-actions text-center">
                <a asp-controller="Gerant" asp-action="GestionPlanEau" class="btn-back">Retour</a>
                <input type="submit" value="Créer la station" class="btn-create" />
            </div>
        </form>
    </div>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <link rel="stylesheet" href="https://unpkg.com/leaflet@1.9.4/dist/leaflet.css" />
    <script src="https://unpkg.com/leaflet@1.9.4/dist/leaflet.js"></script>
    <script>
        var map = L.map('map').setView([@planEau.Emplacement.Y, @planEau.Emplacement.X], 13);
        L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
            attribution: '© OpenStreetMap contributors'
        }).addTo(map);

        var planEauMarker = L.marker([@planEau.Emplacement.Y, @planEau.Emplacement.X]).addTo(map);
        planEauMarker.bindPopup('@planEau.Nom');

        var stationMarker = null;
        map.on('click', function(e) {
            if (stationMarker) {
                map.removeLayer(stationMarker);
            }
            stationMarker = L.marker(e.latlng).addTo(map);
            var positionString = e.latlng.lng + ',' + e.latlng.lat;
            document.getElementById('positionString').value = positionString;
        });

        function validateForm() {
            var positionString = document.getElementById('positionString').value;
            if (!positionString) {
                document.getElementById('positionError').style.display = 'block';
                return false;
            }
            document.getElementById('positionError').style.display = 'none';
            return true;
        }
    </script>
}

<style>
    .user-card {
        border: none;
        border-radius: 12px;
        box-shadow: 0px 6px 15px rgba(0, 0, 0, 0.15);
        padding: 30px;
        background: #fff;
        max-width: 600px;
        margin: auto;
    }

    .user-card-header {
        text-align: center;
        margin-bottom: 20px;
        font-size: 1.8rem;
        font-weight: bold;
    }

    .form-group {
        margin-bottom: 15px;
    }

    .form-control {
        width: 100%;
        padding: 10px;
        border: 1px solid #ccc;
        border-radius: 6px;
    }

    .form-actions {
        display: flex;
        justify-content: space-between;
        margin-top: 20px;
    }

    .btn-back,
    .btn-create {
        padding: 10px 20px;
        text-decoration: none;
        border-radius: 8px;
        font-weight: bold;
        transition: all 0.3s;
        font-size: 1.1rem;
    }

    .btn-back {
        border: 2px solid #6c757d;
        color: #6c757d;
    }

        .btn-back:hover {
            background-color: #6c757d;
            color: white;
        }

    .btn-create {
        border: 2px solid #198754;
        background-color: #198754;
        color: white;
    }

        .btn-create:hover {
            background-color: #145c32;
        }
</style>